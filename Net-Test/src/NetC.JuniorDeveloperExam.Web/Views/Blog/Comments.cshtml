@model NetC.JuniorDeveloperExam.Web.ViewModels.BlogViewModel
@using System.Text
<div id="commentsSection">
    @{
        int index = 0;
    }
    @if (Model.Post.Comments != null && Model.Post.Comments.Count() > 0)
    {
        foreach (var comment in Model.Post.Comments)
        {
            StringBuilder characters = new StringBuilder();
            comment.Name.Split(' ').Take(2).ToList().ForEach(n => characters.Append(n[0]));
            <div class="media mb-4">
                <div class="d-flex mr-3 rounded-circle user-avatar"><label>@characters.ToString()</label></div>
                <div class="media-body">
                    <h5 class="mt-0">@comment.Name<small><em>( @comment.Date.ToString("MMMM dd, yyyy - HH:mm") )</em></small></h5>
                    @comment.Message
                <div class="mr-3">
                    <p>
                        <a data-toggle="collapse" href="#collapseReply_@index" role="button" aria-expanded="false" aria-controls="collapseReply_@index">
                            Reply
                        </a>
                    </p>
                    <div class="card collapse" id="collapseReply_@index">
                        <h5 class="card-header">Leave a Reply:</h5>
                        <div class="card card-body">
                            @using (Ajax.BeginForm("AddReply", "Blog", new AjaxOptions() { HttpMethod = "POST", OnSuccess = "BlogManager.prototype.OnSaveReplySuccessfully" }))
                            {
                                Model.Reply.CommentID = index;
                                @Html.HiddenFor(model => model.Reply.BlogID)
                                @Html.HiddenFor(model => model.Reply.CommentID)
                                <div class="form-row">
                                    <div class="form-group col-md-6">
                                        @Html.LabelFor(model => model.Reply.Name, new { @for = "Name" })
                                        @Html.TextBoxFor(model => model.Reply.Name, new { @class = "form-control", @placeholder = "Name" })
                                        @Html.ValidationMessageFor(model => model.Reply.Name, "")
                                    </div>
                                    <div class="form-group col-md-6">
                                        @Html.LabelFor(model => model.Reply.Email, new { @for = "Email" })
                                        @Html.TextBoxFor(model => model.Reply.Email, new { @class = "form-control", @placeholder = "Email Address" })
                                        @Html.ValidationMessageFor(model => model.Reply.Email, "")
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Reply.Message, new { @for = "Message" })
                                    @Html.TextAreaFor(model => model.Reply.Message, new { @class = "form-control", @placeholder = "Message", @rows = "3" })
                                    @Html.ValidationMessageFor(model => model.Reply.Message, "")
                                </div>
                                <button type="submit" class="btn btn-primary">Submit</button>
                            }
                        </div>
                    </div>
                    <div id="comments_@(index)_replied" class="replies mr-4">
                        @if (comment.Replies != null && comment.Replies.Count > 0)
                        {
                            foreach (var reply in comment.Replies)
                            {
                                characters = new StringBuilder();
                                reply.Name.Split(' ').Take(2).ToList().ForEach(n => characters.Append(n[0]));

                                <div class="media mb-4">
                                    <div class="d-flex mr-3 rounded-circle user-avatar"><label>@characters.ToString()</label></div>
                                    <div class="media-body">
                                        <h5 class="mt-0">@reply.Name <small><em>(@reply.Date.ToString("MMMM dd, yyyyy HH:mm"))</em></small></h5>
                                        @reply.Message
                                    </div>
                                </div>
                            }
                        }
                    </div>
                    @{index++;}
                </div>
                </div>
            </div>
        }
    }
</div>


